name: HDPS-core

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

# for matrix check https://docs.github.com/en/actions/reference/specifications-for-github-hosted-runners
jobs:
  x86_64-pc-windows-msvc:
    name: Windows conan build
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2016]
        compiler: [msvc-2017]
        include: 
        - {os: windows-2016, compiler: msvc-2017, build_cversion: 15, build-runtime: MD, build-config: Release}
        # - {os: windows-2016, compiler: msvc-2017, build_cversion: 15, build-runtime: MDd, build-config: Debug}
        # - {os: windows-2016, compiler: msvc-2019, build_cversion: 16, build-runtime: MD, build-config: Release}
        #- {os: windows-2016, compiler: msvc-2019, build_cversion: 16, build-runtime: MDd, build-config: Debug}
                
    steps:
      - uses: actions/checkout@v2
      - name: Setup python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - name: Update the submodules
        run: git submodule update --init --recursive
      #- name: Get CMake 3.17.2 (need at least 3.17 for hdps)
      #  uses: jwlawson/actions-setup-cmake@v1.3
      #  with:
      #    cmake-version: 3.17
      - uses: ./.github/actions/action-conan-build
        with:
          conan-visual-versions: ${{matrix.build_cversion}}
          conan-visual-runtimes: ${{matrix.build-runtime}}
          conan-build-types: ${{matrix.build-config}}

