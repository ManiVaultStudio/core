name: HDPS-core

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

# for matrix check https://docs.github.com/en/actions/reference/specifications-for-github-hosted-runners
jobs:
  x86_64-pc-windows-msvc:
    name: Windows conan build
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        #os: [windows-2016]
        #compiler: [msvc-2017]
        include: 
        - name: Windows-msvc2017
          os: windows-2016
          compiler: msvc-2017
          build-cversion: 15
          build-runtime: MD
          build-config: Release
          
        - name: Linux_gcc9
          os: ubuntu-18.04
          build-compiler: gcc
          build-cversion: 9
          build-config: Release
          build-os: Linux
          
        - name: Macos_xcode10.3
          os: macos-10.15
          build-compiler: apple-clang
          build-cversion: 10.0
          build-config: Release
          build-os: Macos
          build-xcode-version: 10.3
                
    steps:
      - uses: actions/checkout@v2
      - name: Setup python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
          
      - name: Update the submodules
        run: git submodule update --init --recursive

      - name: Windows build
        if: startsWith(runner.os, 'Windows')
        uses: ./.github/actions/action-conan-windows-build
        with:
          conan-visual-version: ${{matrix.build-cversion}}
          conan-visual-runtime: ${{matrix.build-runtime}}
          conan-build-type: ${{matrix.build-config}}
          
      - name: Linux Mac build
        if: "!startsWith(runner.os, 'Windows')"
        - name: Set Xcode
          run: |
            sudo xcode-select -switch /Applications/Xcode${{matrix.build-xcode-version}}.app
            
        uses: ./.github/actions/action-conan-linux-build
        with:
          conan-compiler: ${{matrix.build-compiler}}
          conan-compiler-version: ${{matrix.build-cversion}}
          conan-build-type: ${{matrix.build-config}}
          conan-build-os: ${{matrix.build-os}}

