name: 'Common cmake steps'
description: 'Encapsulate cmake composite run steps that are common for Linux and Mac'
# reference https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-composite-run-steps-action
inputs:
  conan-compiler: 
    description: 'gcc clang apple-clang'
    required: true
  conan-compiler-version: 
    description: 'A number [gcc: 5 6 7 8 9 ] [clang: 39 40 50 60 7 8 9] [10.0]'
    required: true
  conan-libcxx-version: 
    description: 'Linux: libstdc++ or Macos: libc++ '
    required: true
  conan-build-type:
    description: 'Debug or Release'
    required: true
  conan-build-os:
    description: 'Linux or Macos'
    required: true
  conan-user:  
    description: 'pass secrets.LKEB_ARTIFACTORY_USER'
    required: true
  conan-password: 
    description: 'pass secrets.LKEB_ARTIFACTORY_PASSWORD'
    required: true
  conan-pem: 
    description: 'pass secrets.LKEB_CERT_CHAIN'
    required: true
          
runs:
  using: "composite"
  steps:
    - name: Install conan & build configuration
      run: |
        pip install wheel
        pip install conan
        pip install conan_package_tools bincrafters_package_tools
        pip install -Iv cmake>=3.17
        export CONAN_CMAKE_PROGRAM=`which cmake`
        echo CMake version:
        cmake --version
        mkdir `pwd`/_conan
        export CONAN_USER_HOME=`pwd`/_conan
        export HOMEBREW_NO_AUTO_UPDATE=1
        conan user
        echo Add LKEB artifactory as remote
        conan remote add $CONAN_LKEB_ARTIFACTORY $CONAN_UPLOAD
        echo Extend conan cacert.pem
        echo ${{ inputs.conan-pem}} >> %USERPROFILE%\.conan\cacert.pem
        type %USERPROFILE%\.conan\cacert.pem
        echo Add upload user
        conan user -r $CONAN_LKEB_ARTIFACTORY -p ${{ inputs.conan-password }} ${{ inputs.conan-user }}

        conan profile new action_build
        conan profile update settings.os=${{ inputs.conan-build-os }} action_build
        conan profile update settings.os_build=${{ inputs.conan-build-os }} action_build
        conan profile update settings.arch=x86_64 action_build
        conan profile update settings.arch_build=x86_64 action_build
        conan profile update settings.compiler=${{ inputs.conan-compiler }} action_build
        conan profile update settings.compiler.version=${{ inputs.conan-compiler-version }} action_build
        conan profile update settings.compiler.libcxx=${{ inputs.conan-libcxx-version}} action_build
        conan profile update settings.build_type=${{ inputs.conan-build-type }} action_build
        conan profile update options.hdps-core:shared=True action_build
        conan profile show action_build
        
        mkdir _build
        conan create . hdps-core/latest@lkeb/stable --profile action_build
        conan upload hdps-core/* -r $CONAN_LKEB_ARTIFACTORY

      shell: bash
      env:
        BUILD_SHARED: True
        CONAN_OLDARTIFACTORY: http://cytosplore.lumc.nl:8081/artifactory/api/conan/conan-local
        CONAN_OLDREMOTE: lkebconan
        CONAN_UPLOAD: https://lkeb-artifactory.lumc.nl/artifactory/api/conan/conan-local
        CONAN_LKEB_ARTIFACTORY: lkeb-artifactory
        CONAN_PEM: ${{ inputs.conan-pem }}
